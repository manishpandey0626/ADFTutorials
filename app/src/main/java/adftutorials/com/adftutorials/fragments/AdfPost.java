package adftutorials.com.adftutorials.fragments;


import android.app.Fragment;
import android.os.Bundle;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import java.util.ArrayList;

import adftutorials.com.adftutorials.R;
import adftutorials.com.adftutorials.adapters.AdapterAdfPost;
import adftutorials.com.adftutorials.callbacks.BoxOfficeMoviesLoadedListener;
import adftutorials.com.adftutorials.logging.L;
import adftutorials.com.adftutorials.pojo.Articles;
import adftutorials.com.adftutorials.task.TaskLoadMoviesBoxOffice;


/**
 * A simple {@link Fragment} subclass.
 * Use the {@link AdfPost#newInstance} factory method to
 * create an instance of this fragment.
 */

//add comment

public class AdfPost extends Fragment implements SwipeRefreshLayout.OnRefreshListener, BoxOfficeMoviesLoadedListener {
    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";


    private static final String STATE_MOVIES = "state_movies";
    //the arraylist containing our list of box office his
    private ArrayList<Articles> mListMovies = new ArrayList<>();

    private int chkno;
    //the adapter responsible for displaying our movies within a RecyclerView
    private AdapterAdfPost mAdapter;

    private SwipeRefreshLayout mSwipeRefreshLayout;
    //the recyclerview containing showing all our movies
    private RecyclerView mRecyclerMovies;
    //the TextView containing error messages generated by Volley
    private TextView mTextError;

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;


    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment AdfPost.
     */
    // TODO: Rename and change types and number of parameters
    public static AdfPost newInstance(String param1, String param2) {
        AdfPost fragment = new AdfPost();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    public AdfPost() {
        // Required empty public constructor
    }

   /* @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }
    }*/

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {


        // Inflate the layout for this fragment

        L.m("Size of list  =>"+mListMovies.size()+"      "+chkno);
        View layout = inflater.inflate(R.layout.fragment_adf_post, container, false);

        mSwipeRefreshLayout = (SwipeRefreshLayout) layout.findViewById(R.id.swipeMovieHits);
        mSwipeRefreshLayout.setOnRefreshListener(this);
        mRecyclerMovies = (RecyclerView) layout.findViewById(R.id.listMovieHits);
        //set the layout manager before trying to display data
        mRecyclerMovies.setLayoutManager(new LinearLayoutManager(getActivity()));
        mAdapter = new AdapterAdfPost(getActivity());
        mRecyclerMovies.setAdapter(mAdapter);
        if (savedInstanceState != null) {
            //if this fragment starts after a rotation or configuration change, load the existing movies from a parcelable
            mListMovies = savedInstanceState.getParcelableArrayList(STATE_MOVIES);

            L.m("chk save data=========>"+savedInstanceState.getInt("mykey"));
            L.m("chk size from parcelable  : "+mListMovies.size());
        } else {
            if (mListMovies.isEmpty()) {
                L.m("FragmentBoxOffice: executing task from fragment");
                new TaskLoadMoviesBoxOffice(this).execute();
                chkno=50;
            }
        }
        //update your Adapter to containg the retrieved movies
        mAdapter.setMovies(mListMovies);

        L.m("success2");
        return layout;
    }


    @Override
    public void onRefresh() {
        L.t(getActivity(), "onRefresh");
        //load the whole feed again on refresh, dont try this at home :)
        new TaskLoadMoviesBoxOffice(this).execute();
    }

    @Override
    public void onBoxOfficeMoviesLoaded(ArrayList<Articles> listMovies) {
        if (mSwipeRefreshLayout.isRefreshing()) {
            mSwipeRefreshLayout.setRefreshing(false);
        }
        mListMovies=listMovies;
        mAdapter.setMovies(listMovies);
    }



    @Override
    public void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);

        L.m("inside save state==============================="+mListMovies.size());
        //save the movie list to a parcelable prior to rotation or configuration change
        outState.putParcelableArrayList(STATE_MOVIES, mListMovies);
        outState.putInt("mykey",chkno);
    }
}
